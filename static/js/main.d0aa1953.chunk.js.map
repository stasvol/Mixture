{"version":3,"sources":["components/NavBar/styles.module.css","components/NotesList/styles.module.css","components/Dashboard/styles.module.css","redux/actions/notes.js","redux/reducers/notes.js","redux/reducers/add_content.js","redux/reducers/index.js","redux/reducers/sagas.js","redux/store/configureStore.js","components/NavBar/index.js","components/Pages/Home/index.js","components/Dashboard/index.js","components/Pages/Artists/index.js","components/Dashboard/indexRed1.js","components/Pages/Artworks/index.js","components/NotesList/index.js","components/Pages/Notes/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ADD_NOTE","initState","load","namespace","notes","length","ADD_CONTENT","rootReducer","combineReducers","state","action","type","slice","afterIndex","text","artworkId","sagaWatcher","sagaWorker","takeEvery","call","payload","put","console","log","composeEnhancers","compose","saga","createSagaMiddleware","NavBar","className","styles","map","this","_renderLink","page","i","NavLink","key","activeClassName","to","React","Component","withRouter","Dashboard","renderArtistList","renderSpotLight","props","artists","artist","_id","style","backgroundImage","firstName","lastName","selectedArtistId","match","params","artistId","artistInSpotlight","find","label","imgUrl","renderArtworksList","artworks","artwork","onClick","addContent","title","selectedArtworksId","artworksInSpotlight","mapDispatchToProps","connect","enhance","addNote","renderNote","note","renderAddButton","index","data-index","onAddButtonClick","e","window","prompt","Number","target","dataset","store","createStore","applyMiddleware","save","getState","App","HashRouter","Switch","Route","exact","path","component","HomePage","NotesPage","ArtistsPage","ArtworksPage","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0aa1953.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-bar\":\"styles_nav-bar__2qfC9\",\"link\":\"styles_link__3ICN-\",\"active-link\":\"styles_active-link__1x688\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note-list\":\"styles_note-list__18OUD\",\"add-note\":\"styles_add-note__LLL10\",\"note-list-item\":\"styles_note-list-item__3kGAe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"styles_dashboard__1ERxk\",\"header\":\"styles_header__3rh99\",\"artist-row\":\"styles_artist-row__2N7Fv\",\"active-artist-row\":\"styles_active-artist-row__UCDIe\",\"artist-avatar\":\"styles_artist-avatar__ODKcq\",\"spotlight\":\"styles_spotlight__38UwJ\",\"spotlight-img\":\"styles_spotlight-img__2ARPp\",\"spotlight-label\":\"styles_spotlight-label__2p6Vc\",\"artworks-row\":\"styles_artworks-row__24YpH\",\"active-artworks-row\":\"styles_active-artworks-row__2DxoJ\",\"artworks-avatar\":\"styles_artworks-avatar__1DNDe\"};","export const ADD_NOTE = \"ADD_NOTE\";\r\n\r\n\r\n\r\nexport function addNote(text, afterIndex) {\r\n\r\n  return {\r\n    type: ADD_NOTE,\r\n    text,\r\n    afterIndex\r\n  };\r\n}\r\n","import {ADD_NOTE} from \"../actions/notes\";\r\nimport {save, load} from \"redux-localstorage-simple\"\r\n\r\nlet initState = load({namespace: 'NotesList'})\r\n\r\nif (!initState || !initState.notes || !initState.notes.length) {\r\n    initState = {\r\n        notes: [\"note 1\", \"note 2\", \"note 3\", \"note 4\"],\r\n    }\r\n}\r\n\r\nexport default function (state = initState.notes, action) {\r\n    switch (action.type) {\r\n        case ADD_NOTE:\r\n            return [\r\n                ...state.slice(0, action.afterIndex + 1),\r\n                action.text,\r\n                ...state.slice(action.afterIndex + 1)\r\n            ];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../../components/Dashboard/styles.module.css\";\r\n\r\nconst ADD_CONTENT = 'ADD_CONTENT'\r\n// import {ADD_CONTENT} from '../actions/addActionContent'\r\n\r\nconst initialState = null\r\n\r\nexport const artworkId = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_CONTENT:\r\n            return action.artworkId\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport const addContentAC = (artworkId) => ({type: ADD_CONTENT, artworkId})","import { combineReducers } from 'redux';\r\nimport notes from './notes';\r\nimport {artworkId} from \"./add_content\";\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n  notes,\r\n  artworkId\r\n});\r\n\r\nexport default rootReducer;","import {call, put, takeEvery} from \"redux-saga/effects\";\r\nimport {ADD_NOTE} from \"../actions/notes\";\r\n\r\n\r\nexport function* sagaWatcher(){\r\n   yield takeEvery(ADD_NOTE,sagaWorker)\r\n}\r\n\r\nfunction* sagaWorker(){\r\n    const payload = yield call(ADD_NOTE)\r\n    yield put({type:ADD_NOTE,payload})\r\n    console.log(payload)\r\n}\r\nconsole.log(sagaWatcher)","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport rootReducer from '../reducers/';\r\nimport {save, load} from \"redux-localstorage-simple\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport {sagaWatcher} from '../reducers/sagas'\r\n\r\n\r\n\r\nconst composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\nconst saga = createSagaMiddleware()\r\n\r\nexport default function () {\r\n    return createStore(\r\n        rootReducer,\r\n        composeEnhancers(\r\n            applyMiddleware( saga,\r\n                save({namespace: 'NotesList'})\r\n                 )\r\n        ),\r\n    );\r\n         saga.run(sagaWatcher)\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport styles from \"./styles.module.css\";\r\n\r\nclass NavBar extends React.Component {\r\n  render() {\r\n    const pages = [\"notes\", \"artists\", \"artworks\"];\r\n\r\n    return (\r\n      <div className={styles[\"nav-bar\"]}>\r\n        {pages.map(this._renderLink)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  _renderLink(page, i = -1) {\r\n    return (\r\n      <NavLink\r\n        key={i}\r\n        className={styles[\"link\"]}\r\n        activeClassName={styles[\"active-link\"]}\r\n        to={`/${page}`}\r\n      >\r\n        {page}\r\n      </NavLink>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from \"react\";\r\n\r\nimport NavBar from \"../../NavBar\";\r\n\r\nexport default () => (\r\n  <div>\r\n    <NavBar />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport styles from \"./styles.module.css\";\r\n\r\nclass Dashboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={styles['dashboard']}>\r\n        <div>\r\n          <h3 className={styles['header']}>Artists</h3>\r\n          {this.renderArtistList()}\r\n        </div>\r\n        {this.renderSpotLight()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderArtistList() {\r\n    return this.props.artists.map(artist => (\r\n      <NavLink\r\n        key={artist._id}\r\n        to={`/artists/${artist._id}`}\r\n        className={styles['artist-row']}\r\n        activeClassName={styles['active-artist-row']}\r\n      >\r\n        <div\r\n          className={styles['artist-avatar']}\r\n          style={{\r\n            backgroundImage: `url(/imgs/artists/${artist._id}.png)`\r\n          }}\r\n        />\r\n        <span>{`${artist.firstName} ${artist.lastName}`}</span>\r\n      </NavLink>\r\n    ));\r\n  }\r\n\r\n  renderSpotLight() {\r\n\r\n    const props = this.props;\r\n    const selectedArtistId = props.match.params && props.match.params.artistId;\r\n    if (!selectedArtistId) {\r\n      return null;\r\n    }\r\n    const artistInSpotlight = props.artists.find(\r\n      artist => artist._id === selectedArtistId\r\n    );\r\n    const label = `${artistInSpotlight.firstName} ${\r\n      artistInSpotlight.lastName\r\n    }`;\r\n    const imgUrl = `imgs/artists/${artistInSpotlight._id}.png`;\r\n    return (\r\n      <div className={styles['spotlight']}>\r\n        <div\r\n          className={styles['spotlight-img']}\r\n          style={{\r\n            backgroundImage: `url(${imgUrl})`\r\n          }}\r\n        />\r\n        <div className={styles['spotlight-label']}>{label}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Dashboard);\r\n","import React from \"react\";\r\n\r\nimport NavBar from \"../../NavBar\";\r\nimport Dashboard from \"../../Dashboard\";\r\nimport Image from \"../../Image\";\r\n\r\n// consider this data arrived from the API\r\n// <donotmodify>\r\nconst artists = [\r\n  { _id: \"1\", firstName: \"Annie\", lastName: \"Walker\" },\r\n  { _id: \"2\", firstName: \"Lynda\", lastName: \"Dubovich\" },\r\n  { _id: \"3\", firstName: \"Jessica\", lastName: \"Gonsalez\" },\r\n  { _id: \"4\", firstName: \"Kate\", lastName: \"Banksy\" }\r\n];\r\n// </donotmodify>\r\n\r\nexport default props => {\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Dashboard artists={artists} />\r\n        {/*<Image/>*/}\r\n    </div>\r\n  );\r\n};\r\n","import React, {Component} from \"react\";\r\nimport {withRouter} from \"react-router\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {addContentAC} from '../../redux/reducers/add_content'\r\nimport {addContentReduxer} from '../../redux/reducers/add_content'\r\nimport styles from \"./styles.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        return (\r\n            <div className={styles['dashboard']}>\r\n                <div>\r\n                    <h3 className={styles['header']}>Artworks</h3>\r\n                    {this.renderArtworksList()}\r\n                    {/*{props.addContent()}*/}\r\n\r\n                </div>\r\n                {this.renderSpotLight()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n         renderArtworksList = () => {\r\n\r\n            return this.props.artworks.map(artwork => (\r\n                <div onClick={() => this.props.addContent(artwork._id)}\r\n                     key={artwork._id}\r\n                    // to={`/artworks/${artwork._id}`}\r\n                     className={ this.props.artworkId === artwork._id\r\n                         ? styles['active-artworks-row']\r\n                         : styles['artworks-row']}\r\n                     // activeclassName={styles['active-artworks-row']}\r\n                >\r\n                    <div\r\n                        className={styles['artworks-avatar']}\r\n                        style={{\r\n                            backgroundImage: `url(/imgs/artworks/${artwork._id}.jpg)`\r\n                        }}\r\n                    />\r\n                    <span>{`${artwork.title} `}</span>\r\n                </div>\r\n            ));\r\n        }\r\n\r\n       renderSpotLight = () => {\r\n\r\n            const selectedArtworksId = this.props.artworkId\r\n            // props.match.params && props.match.params.artworkId;\r\n            if (!selectedArtworksId) {\r\n                return null;\r\n            }\r\n            const artworksInSpotlight = this.props.artworks.find(\r\n                artworks => artworks._id === selectedArtworksId\r\n            );\r\n            const label = `${artworksInSpotlight.title}`;\r\n\r\n            const imgUrl = `imgs/artworks/${artworksInSpotlight._id}.jpg`;\r\n            return (\r\n                <div className={styles['spotlight']}>\r\n                    <div\r\n                        className={styles['spotlight-img']}\r\n                        style={{\r\n                            backgroundImage: `url(${imgUrl})`\r\n                        }}\r\n                    />\r\n                    <div className={styles['spotlight-label']}>{label}</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        artworkId: state.artworkId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps ={\r\n\r\n    addContent: addContentAC\r\n}\r\n\r\n// const mapDispatchToProps =(dispatch)=> {\r\n//\r\n//  return {\r\n//         addContent:(artworkId)=>{\r\n//          dispatch(addContentAC(artworkId))\r\n//\r\n//  }\r\n// }\r\n// }\r\n\r\n// const withRouterDashboard = withRouter (Dashboard)\r\n// const containerDashboard =connect() (withRouterDashboard)\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(Dashboard);\r\n\r\n// let url = window.location.toString();\r\n// url = url.replace(/#anchor/,'');\r\n// window.location = url;\r\n// АБО :\r\n// // window.location.pathname = ''","import React from \"react\";\r\nimport Dashboard from \"../../Dashboard/indexRed1\";\r\nimport NavBar from \"../../NavBar\";\r\n\r\n// consider this data arrived from the API\r\n// <donotmodify>\r\nconst artworks = [\r\n    { _id: \"1\",  title: \"In the event of sinking\" },\r\n    { _id: \"2\",  title: \"Refugees in a nutshell\" },\r\n    { _id: \"3\",  title: \"Solidarity\" },\r\n    { _id: \"4\",  title: \"The rehearsal\" }\r\n];\r\n// </donotmodify>\r\n\r\nexport default props => (\r\n  <div>\r\n    <NavBar />\r\n    <Dashboard artworks={artworks} />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addNote } from \"../../redux/actions/notes\";\r\n\r\nimport styles from \"./styles.module.css\";\r\n\r\nconst enhance = connect(\r\n  ({ notes }) => ({ notes }),\r\n  { addNote }\r\n);\r\n\r\nclass NotesList extends React.Component {\r\n  render() {\r\n\r\n    if (!this.props.notes.length) {\r\n      return this.renderAddButton();\r\n\r\n    }\r\n    return (\r\n      <ul className={styles[\"note-list\"]}>\r\n        {this.props.notes.map((note, index) => {\r\n          return (\r\n            <li key={index}>\r\n              {this.renderNote(note)}\r\n              {this.renderAddButton(index)}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  renderNote = (note) => <div className={styles[\"note-list-item\"]}>{note}</div>;\r\n\r\n  renderAddButton = (index= 0) => (\r\n    <button\r\n      data-index={index}\r\n      className={styles[\"add-note\"]}\r\n      onClick={this.onAddButtonClick}\r\n    >\r\n      + add note\r\n    </button>\r\n  );\r\n\r\n  onAddButtonClick = e => {\r\n    const text = window.prompt(\"Note text:\");\r\n    text && this.props.addNote(text, Number(e.target.dataset.index));\r\n\r\n  };\r\n}\r\n\r\nexport default enhance(NotesList);\r\n","import React from \"react\";\r\n\r\nimport NavBar from \"../../NavBar\";\r\nimport NotesList from \"../../NotesList\";\r\n\r\nexport default () => (\r\n  <div>\r\n    <NavBar />\r\n    <NotesList />\r\n  </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route } from \"react-router\";\r\nimport { Provider } from \"react-redux\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport configureStore from \"./redux/store/configureStore\";\r\n\r\nimport HomePage from \"./components/Pages/Home\";\r\nimport ArtistsPage from \"./components/Pages/Artists\";\r\nimport ArtworksPage from \"./components/Pages/Artworks\";\r\nimport NotesPage from \"./components/Pages/Notes\";\r\nimport Image from \"./components/Image\";\r\n\r\nconst store = configureStore();\r\n\r\nconsole.log(store.getState())\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <HashRouter>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={HomePage} />\r\n            <Route path=\"/notes\" component={NotesPage} />\r\n            <Route path=\"/artists/:artistId*\" component={ArtistsPage} />\r\n            <Route path=\"/artworks/:artworksId*\" component={ArtworksPage} />\r\n            {/*<ArtworksPage/>*/}\r\n\r\n          </Switch>\r\n        </HashRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}